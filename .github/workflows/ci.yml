name: Continuous Integration

env:
  HUSKY: 0

permissions:
  pull-requests: write  

on: 
  pull_request:
  push:
    branches:
      - main

jobs:    
  ci:
    name: Complete Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install Dependencies
        id: pnpmi
        run: pnpm install

      - name: Check commit message
        id: commitlint-not_main
        if: github.ref_name != 'main'
        run: pnpm commitlint --from=origin/main --verbose

      - name: Type Check
        id: pnpm-typecheck
        run: pnpm typecheck

      - name: Lint
        id: pnpm-lint
        run: pnpm lint

      - name: Test
        id: pnpm-ci-test-main
        run: pnpm test:all

      - name: Comment Test Results
        id: coverage
        run: |
          if [ ! -f coverage/coverage-summary.json ]; then
            echo "Coverage report not found!" && exit 1
          fi
          TOTAL_COVERAGE=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          STATEMENTS_COVERAGE=$(jq '.total.statements.pct' coverage/coverage-summary.json)
          BRANCHES_COVERAGE=$(jq '.total.branches.pct' coverage/coverage-summary.json)
          FUNCTIONS_COVERAGE=$(jq '.total.functions.pct' coverage/coverage-summary.json)
          
          echo "TOTAL_COVERAGE=$TOTAL_COVERAGE" >> $GITHUB_OUTPUT
          echo "STATEMENTS_COVERAGE=$STATEMENTS_COVERAGE" >> $GITHUB_OUTPUT
          echo "BRANCHES_COVERAGE=$BRANCHES_COVERAGE" >> $GITHUB_OUTPUT
          echo "FUNCTIONS_COVERAGE=$FUNCTIONS_COVERAGE" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: vitest-coverage
          message: |
            ## 🛡️ Vitest Coverage Report
            | Metric       | Coverage |
            |-------------|----------|
            | 📜 Statements | **${{ steps.coverage.outputs.STATEMENTS_COVERAGE }}%** |
            | 🌿 Branches  | **${{ steps.coverage.outputs.BRANCHES_COVERAGE }}%** |
            | 🔢 Functions  | **${{ steps.coverage.outputs.FUNCTIONS_COVERAGE }}%** |
            | 🏆 Lines      | **${{ steps.coverage.outputs.TOTAL_COVERAGE }}%** |

      - name: Build
        id: pnpm-build
        run: pnpm build

      # This will fail the workflow if the `dist/` directory is different than
      # expected.
      - name: Compare Directories
        id: diff
        run: |
          if [ ! -d dist/ ]; then
            echo "Expected dist/ directory does not exist.  See status below:"
            ls -la ./
            exit 1
          fi
          if [ "$(git diff --ignore-space-at-eol --text dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff --ignore-space-at-eol --text dist/
            exit 1
          fi
